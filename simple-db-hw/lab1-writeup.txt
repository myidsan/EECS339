Database references to catalog and bufferpool to acquire necessary information for the database via getCatalog() and getBufferPool() method which were given to us to use throughout lab1 code. HeapPage implements Page, HeapFile implement DbFile. BufferPool gets pages from HeapFile by calling getPage method. Operators such as SeqScan iterates on DbFile.

[BufferPool]
BufferPool manages the reading and writing of pages into memory from disk. Therefore, I used HashMap to cache PageId and Page because its asymptotic runtime is O(1) which would make the page reference much faster. The getPage() method would check if the desired page is already cached and get it via get(). If the page is not cached, it would get the relevant catalog (and thus file) from the database cache it into the Hashmap using put() method. 

[Catalog]
	Catalog keeps track of all available tables in the database and their associated schemas. For the same reason as BufferPool, HashMap was used to make the look-up process fast. 
private HashMap<Integer, DbFile> id2table;
private HashMap<Integer, TupleDesc> id2tupleDesc;
private HashMap<String, Integer> name2id;
private HashMap<Integer, String> id2name;
private HashMap<Integer, String> pkey;

[HeapPage]
	HeapPageIteartor: class HeapPageIterator implements Iterator<Tuple>
	Added: I kept running into null pointer exception error in HeapFileReadTest which called iterator() method on HeapPage. So I added a getTuple() method in HeapPage (signature: Tuple getTuple(int i) throws NoSuchElementException) for hasNext() in HeapPageIterator to handle null pointer exception. 

HeapFile
	HeapFileIterator: class HeapFileIterator extends AbstractDbFileIterator
	No API changes made here. 

[Missing or Incomplete Elements:]
The issue of lacking code consistency may lead to confused reading and understanding of code. Working on the lab throughout a span of time and not going over the previously written code carefully enough is the main reason.

[Overall / Difficulties]
Describe how long you spent on the lab, and whether there was anything you found particularly difficult or confusing
Iâ€™ve spent about a week and a half on the lab. First few days were 1 ~3 hours a day and then it became 4 ~5 hours per day as the week progressed. It took me quite a lot of time to read through the javadocs and to find what methods to implement. Discussing with friends were helpful through the lab: although we had different approach and implementation it was good to bounce off ideas.
Implementing isSlotUsed in HeapPage.java was difficult because it required bitwise operation to differentiate the headerBit and headerByte
HeapPageIterator and HeapFileIterator were also confusing since they had to implemented based on different classes. 
Overall thorough reading of error messages on ant testing guided the lab in the right direction.
